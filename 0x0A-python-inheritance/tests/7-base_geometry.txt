>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("int1", 2)
>>> bg.integer_validator("int2", 1024)
>>> bg.integer_validator("name", "Allison")
Traceback (most recent call last):
                ...
TypeError: name must be an integer
>>> bg.integer_validator("int3", -2)
Traceback (most recent call last):
                ...
ValueError: int3 must be greater than 0
>>> bg.integer_validator("float", 4.5)
Traceback (most recent call last):
		...
TypeError: float must be an integer
>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
                ...
TypeError: bool must be an integer
>>> bg.integer_validator("none", None)
Traceback (most recent call last):
                ...
TypeError: none must be an integer
>>> bg.integer_validator("zero", 0)
Traceback (most recent call last):
                ...
ValueError: zero must be greater than 0
>>> bg.integer_validator("list", [])
Traceback (most recent call last):
                ...
TypeError: list must be an integer
>>> bg.integer_validator("tuple", ())
Traceback (most recent call last):
                ...
TypeError: tuple must be an integer
>>> bg.integer_validator("dict", {})
Traceback (most recent call last):
                ...
TypeError: dict must be an integer
>>> bg.integer_validator()
Traceback (most recent call last):
                ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("int4")
Traceback (most recent call last):
                ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
